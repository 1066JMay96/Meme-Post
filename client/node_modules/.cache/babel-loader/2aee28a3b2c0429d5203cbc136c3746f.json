{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Siraceddin\\\\Desktop\\\\HTML STUFF\\\\HW\\\\project-3\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Siraceddin\\\\Desktop\\\\HTML STUFF\\\\HW\\\\project-3\\\\client\\\\src\\\\pages\\\\CreateMemePage.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport \"../styles/CreateMemePage.css\";\nimport Meme from \"../components/Meme/\";\nexport default function CreateMemePage() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      templates = _useState2[0],\n      setTemplates = _useState2[1]; //tmeplates stores all the meme img's retrieved from API\n\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      template = _useState4[0],\n      setTemplate = _useState4[1]; //template stores which image the user chose to use\n\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      topText = _useState6[0],\n      setTopText = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      bottomText = _useState8[0],\n      setBottomText = _useState8[1];\n\n  useEffect(function () {\n    fetch(\"https://api.imgflip.com/get_memes\").then(function (x) {\n      return x.json().then(function (res) {\n        return setTemplates(res.data.memes);\n      });\n    });\n  }, []);\n\n  function handleSubmit(event) {\n    event.preventDefault();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Create a Meme\"), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"meme-display-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, template && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Meme, {\n    template: template,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"Title of Meme\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"top-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 33\n    }\n  }, \"Top-Text\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"top-text\",\n    onChange: function onChange(e) {\n      return setTopText(e.target.value);\n    },\n    value: topText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    id: \"bottom-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, \"Bottom-Text\"), /*#__PURE__*/React.createElement(Form.Control, {\n    placeholder: \"bottom-text\",\n    onChange: function onChange(e) {\n      return setBottomText(e.target.value);\n    },\n    value: bottomText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Create Meme\"))), !template && templates.map(function (template) {\n    return /*#__PURE__*/React.createElement(\"img\", {\n      className: \"meme-img ml-2 mt-2\",\n      key: template.id,\n      src: template.url,\n      alt: template.name,\n      onClick: function onClick() {\n        setTemplate(template);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 25\n      }\n    });\n  })));\n}","map":{"version":3,"sources":["C:/Users/Siraceddin/Desktop/HTML STUFF/HW/project-3/client/src/pages/CreateMemePage.js"],"names":["React","useEffect","useState","Container","Form","Button","Meme","CreateMemePage","templates","setTemplates","template","setTemplate","topText","setTopText","bottomText","setBottomText","fetch","then","x","json","res","data","memes","handleSubmit","event","preventDefault","e","target","value","map","id","url","name"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport {Container, Form, Button} from \"react-bootstrap\";\r\nimport \"../styles/CreateMemePage.css\";\r\nimport Meme from \"../components/Meme/\";\r\n\r\nexport default function CreateMemePage() {\r\n\r\n    \r\n    const [templates, setTemplates] = useState([]); //tmeplates stores all the meme img's retrieved from API\r\n    const [template, setTemplate] = useState(null); //template stores which image the user chose to use\r\n    const [topText, setTopText] = useState('');\r\n    const [bottomText, setBottomText] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(x => x.json().then(res => setTemplates(res.data.memes))\r\n        );\r\n    }, []);\r\n\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create a Meme</h1>\r\n            <Container fluid className=\"meme-display-container\">\r\n                {template && (\r\n                    <>\r\n                        <Meme template={template}/>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"title\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control placeholder=\"Title of Meme\" />\r\n                            </Form.Group>\r\n                            <Form.Group id=\"top-text\">\r\n                                <Form.Label>Top-Text</Form.Label>\r\n                                <Form.Control placeholder=\"top-text\" onChange={e => setTopText(e.target.value)} value={topText}/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"bottom-text\">\r\n                                <Form.Label>Bottom-Text</Form.Label>\r\n                                <Form.Control  placeholder=\"bottom-text\"  onChange={e => setBottomText(e.target.value)} value={bottomText}/>\r\n                            </Form.Group>\r\n                            <Button className=\"btn btn-primary\" type=\"submit\">Create Meme</Button>\r\n                        </Form>\r\n                  </>\r\n                )}\r\n                {!template && templates.map((template) => {\r\n                    return (\r\n                        <img             \r\n                            className=\"meme-img ml-2 mt-2\" \r\n                            key={template.id} \r\n                            src={template.url} \r\n                            alt={template.name}\r\n                            onClick={() => {\r\n                                setTemplate(template)\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n            </Container>\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}