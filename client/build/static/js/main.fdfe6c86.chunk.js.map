{"version":3,"sources":["components/Navbar/index.js","firebase.js","contexts/AuthContext.js","pages/Signup.js","pages/Login.js","pages/Profile.js","pages/ForgotPassword.js","pages/UpdateProfile.js","components/PrivateRoute/index.js","pages/HomePage.js","components/Meme/index.js","utils/API.js","pages/CreateMemePage.js","pages/LikedMemePage.js","App.js","index.js"],"names":["NavBar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","AuthContext","React","createContext","useAuth","useContext","AuthProvider","children","useState","currentUser","setCurrentUser","loading","setLoading","useEffect","onAuthStateChanged","user","value","signup","email","password","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","logout","signOut","resetPassword","sendPasswordResetEmail","updateEmail","updatePassword","Provider","Signup","emailRef","useRef","passwordRef","passwordConfRef","error","setError","history","useHistory","event","a","preventDefault","current","push","Container","style","minHeight","maxWidth","Card","Body","Alert","variant","Form","onSubmit","Group","Label","Control","ref","required","Button","disabled","to","Login","Profile","onClick","ForgotPassword","message","setMessage","UpdateProfile","promises","Promise","all","then","catch","finally","defaultValue","placeholder","PrivateRoute","Component","component","rest","render","props","HomePage","Meme","template","onCLick","key","src","url","alt","name","memeData","console","log","axios","post","objectToQueryParam","obj","Object","entries","map","join","CreateMemePage","templates","setTemplates","setTemplate","topText","setTopText","bottomText","setBottomText","title","setTitle","params","template_id","text0","text1","username","fetch","response","json","data","userEmail","memes","meme","API","err","x","res","fluid","onChange","e","target","LikedMemePage","App","Navbar","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.fdfe6c86.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function NavBar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n        <a className=\"navbar-brand\" href=\"/homepage\">Meme-Post</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item active\">\r\n                    <a className=\"nav-link\" href=\"/homepage\">Home </a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/create\">Create</a>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <a className=\"nav-link\" href=\"/liked\">Liked</a>\r\n                </li>\r\n                <li className=\"nav-item dropdown\">\r\n                    <a className=\"nav-link dropdown-toggle\" href=\"/profile\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                        Account\r\n                    </a>\r\n                    <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                        <a className=\"dropdown-item\" href=\"/signup\">Sign-Up</a>\r\n                        <a className=\"dropdown-item\" href=\"/login\">Login</a>\r\n                    </div>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/profile\">Profile</a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </nav>\r\n    );\r\n}\r\n\r\nexport default NavBar;","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nconst app = firebase.initializeApp({\r\n    apiKey: \"AIzaSyAxha5URmgTCxb_2FzKgl4ErM_XO7YQtxg\",\r\n    authDomain: \"meme-post-dev.firebaseapp.com\",\r\n    databaseURL: \"https://meme-post-dev-default-rtdb.firebaseio.com\",\r\n    projectId: \"meme-post-dev\",\r\n    storageBucket: \"meme-post-dev.appspot.com\",\r\n    messagingSenderId: \"937027276683\",\r\n    appId: \"1:937027276683:web:dcef14bb0690e45a09298e\"\r\n}) \r\n\r\n\r\nexport const auth = app.auth()\r\nexport default app\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { auth } from \"../firebase\";\r\n\r\nconst AuthContext = React.createContext();\r\n\r\nexport function useAuth() {\r\n    return useContext(AuthContext);\r\n}\r\n\r\nexport function AuthProvider({ children }) {\r\n    const [currentUser, setCurrentUser] = useState()\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    function signup(email, password) {\r\n       return auth.createUserWithEmailAndPassword(email, password) \r\n    }\r\n\r\n    function login(email, password) {\r\n        return auth.signInWithEmailAndPassword(email, password);\r\n    }\r\n\r\n    function logout() {\r\n        return auth.signOut()\r\n    }\r\n\r\n    function resetPassword(email) {\r\n        return auth.sendPasswordResetEmail(email);\r\n    }\r\n\r\n    function updateEmail(email) {\r\n        return currentUser.updateEmail(email);\r\n    }\r\n\r\n    function updatePassword(password) {\r\n        return currentUser.updatePassword(password);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(user => {\r\n            setCurrentUser(user)\r\n            setLoading(false)\r\n        })\r\n\r\n        return unsubscribe\r\n    }, [])\r\n\r\n    const value = {\r\n        currentUser,\r\n        signup,\r\n        login,\r\n        logout,\r\n        resetPassword,\r\n        updateEmail,\r\n        updatePassword\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {!loading && children}\r\n        </AuthContext.Provider>\r\n    );\r\n}","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Container, Alert  } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nfunction Signup() {\r\n\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfRef = useRef();\r\n  const { signup } = useAuth();\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    //Password confirmation to check if the password is == to the re-entered password\r\n    if(passwordRef.current.value !== passwordConfRef.current.value) {\r\n      return setError(\"Passwords do not match\");\r\n    }\r\n\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true)\r\n      await signup(emailRef.current.value, passwordRef.current.value);\r\n      history.push(\"/homepage\");\r\n    } catch {\r\n      setError(\"Failed to create an account\");\r\n    }\r\n    setLoading(false)\r\n  }\r\n\r\n    return (\r\n        <>\r\n          <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n              <Card>\r\n                <Card.Body>\r\n                  <h2 className=\"text-center md-4\">Sign Up</h2>\r\n                  {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Form.Group id=\"email\">\r\n                      <Form.Label>Email</Form.Label>\r\n                      <Form.Control type=\"email\" ref={emailRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control type=\"password\" ref={passwordRef} required />\r\n                    </Form.Group>\r\n                    <Form.Group id=\"password-confirm\">\r\n                      <Form.Label>Re-Enter Password</Form.Label>\r\n                      <Form.Control type=\"password\" ref={passwordConfRef} required />\r\n                    </Form.Group>\r\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Sign Up</Button>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n              <div className=\"w-100 text-center mt-2\">\r\n                Already have an account? <Link to=\"/login\">Log In</Link>\r\n              </div>\r\n            </div>\r\n          </Container>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Container, Alert  } from \"react-bootstrap\";\nimport { useAuth } from \"../contexts/AuthContext\";\nimport {Link, useHistory} from \"react-router-dom\";\n\nfunction Login() {\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const { login } = useAuth();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    try {\n      setError(\"\");\n      setLoading(true)\n      await login(emailRef.current.value, passwordRef.current.value);\n      history.push(\"/homepage\");\n    } catch {\n      setError(\"Failed to sign in\");\n    }\n    setLoading(false)\n  }\n\n    return (\n        <>\n          <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\n            <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\n              <Card>\n                <Card.Body>\n                  <h2 className=\"text-center md-4\">Log In</h2>\n                  {error && <Alert variant=\"danger\">{error}</Alert>}\n                  <Form onSubmit={handleSubmit}>\n                    <Form.Group id=\"email\">\n                      <Form.Label>Email</Form.Label>\n                      <Form.Control type=\"email\" ref={emailRef} required />\n                    </Form.Group>\n                    <Form.Group id=\"password\">\n                      <Form.Label>Password</Form.Label>\n                      <Form.Control type=\"password\" ref={passwordRef} required />\n                    </Form.Group>\n                    <Button disabled={loading} className=\"w-100\" type=\"submit\">Log In</Button>\n                  </Form>\n                  <div className=\"w-100 text-center mt-2\">\n                   <Link to=\"/forgot-password\">Forgot Password?</Link>\n                  </div>\n                </Card.Body>\n              </Card>\n              <div className=\"w-100 text-center mt-2\">\n                Dont have an account? <Link to=\"/signup\">Sign Up</Link>\n              </div>\n            </div>\n          </Container>\n        </>\n    );\n}\n\nexport default Login;","import React, { useState } from \"react\";\r\nimport {Card, Button, Alert, Container} from \"react-bootstrap\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nexport default function Profile() {\r\n    const [error, setError] = useState(\"\");\r\n    const {currentUser, logout} = useAuth();\r\n    const history = useHistory();\r\n\r\n    async function handleLogout() {\r\n        setError(\"\")\r\n\r\n        try {\r\n            await logout()\r\n            history.push(\"/login\")\r\n        } catch {\r\n            setError(\"Failed to log out\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <h2 className=\"text-center mb-4\">Profile</h2>\r\n                            {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                            <strong>Email: </strong> {currentUser.email}\r\n                            <Link to=\"/update_profile\" className=\"btn btn-primary w-100 mt-3\">\r\n                                Update Profile\r\n                            </Link>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Button variant=\"primary\" onClick={handleLogout}>Log Out</Button>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Container, Alert  } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport default function ForgotPassword() {\r\n\r\n    const emailRef = useRef();\r\n    const { resetPassword } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n  \r\n    async function handleSubmit(event) {\r\n      event.preventDefault();\r\n  \r\n      try {\r\n        setMessage(\"\");\r\n        setError(\"\");\r\n        setLoading(true)\r\n        await resetPassword(emailRef.current.value);\r\n        setMessage(\"Check you inbox for further instructions\");\r\n      } catch {\r\n        setError(\"Failed to reset password\");\r\n      }\r\n      setLoading(false)\r\n    }\r\n    return (\r\n        <>\r\n        <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n          <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n            <Card>\r\n              <Card.Body>\r\n                <h2 className=\"text-center md-4\">Reset Password</h2>\r\n                {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                {message && <Alert variant=\"success\">{message}</Alert>}\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Form.Group id=\"email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" ref={emailRef} required />\r\n                  </Form.Group>\r\n                  <Button disabled={loading} className=\"w-100\" type=\"submit\">Reset Password</Button>\r\n                </Form>\r\n                <div className=\"w-100 text-center mt-2\">\r\n                 <Link to=\"/forgot-password\">Forgot Password?</Link>\r\n                </div>\r\n              </Card.Body>\r\n            </Card>\r\n            <div className=\"w-100 text-center mt-2\">\r\n              Dont have an account? <Link to=\"/signup\">Sign Up</Link>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </>\r\n    );\r\n}","import React, { useRef, useState } from \"react\";\r\nimport { Form, Button, Card, Container, Alert  } from \"react-bootstrap\";\r\nimport { useAuth } from \"../contexts/AuthContext\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nexport default function UpdateProfile() {\r\n    const emailRef = useRef();\r\n    const passwordRef = useRef();\r\n    const passwordConfRef = useRef();\r\n    const { currentUser, updatePassword, updateEmail } = useAuth();\r\n    const [error, setError] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const history = useHistory();\r\n  \r\n    function handleSubmit(event) {\r\n      event.preventDefault();\r\n  \r\n      //Password confirmation to check if the password is == to the re-entered password\r\n      if(passwordRef.current.value !== passwordConfRef.current.value) {\r\n        return setError(\"Passwords do not match\");\r\n      }\r\n\r\n      //if the changes email is different than the current email push to promises \r\n      //also push new password into promises\r\n      const promises = [];\r\n      setLoading(true);\r\n      setError(\"\");\r\n\r\n      if(emailRef.current.value !== currentUser.email) {\r\n          promises.push(updateEmail(emailRef.current.value));\r\n      }\r\n      if(passwordRef.current.value) {\r\n          promises.push(updatePassword(passwordRef.current.value))\r\n      }\r\n      Promise.all(promises)\r\n        .then(() => {\r\n            history.push(\"/profile\")\r\n        })\r\n        .catch(() => {\r\n            setError(\"Failed to update profile\")\r\n        })\r\n        .finally(() => {\r\n            setLoading(false);\r\n        })\r\n    }\r\n  \r\n    return (\r\n        <>\r\n            <Container className=\"d-flex align-items-center justify-content-center\" style={{minHeight: \"100vh\"}}>\r\n                <div className=\"w-100\" style={{maxWidth: \"400px\"}}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                        <h2 className=\"text-center md-4\">Update Profile</h2>\r\n                        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"email\">\r\n                                <Form.Label>Email</Form.Label>\r\n                                <Form.Control type=\"email\" ref={emailRef} required defaultValue={currentUser.email}/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordRef}  placeholder=\"Leave blank to keep the same\"/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"password-confirm\">\r\n                                <Form.Label>Re-Enter Password</Form.Label>\r\n                                <Form.Control type=\"password\" ref={passwordConfRef}  placeholder=\"Leave blank to keep the same\"/>\r\n                            </Form.Group>\r\n                            <Button disabled={loading} className=\"w-100\" type=\"submit\">Update</Button>\r\n                        </Form>\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <div className=\"w-100 text-center mt-2\">\r\n                        <Link to=\"/profile\">Cancle</Link>\r\n                    </div>\r\n                </div>\r\n            </Container>\r\n        </>\r\n    );\r\n}\r\n  ","import React from \"react\";\r\nimport {Redirect, Route} from 'react-router-dom';\r\nimport {useAuth} from \"../../contexts/AuthContext\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\r\n    const {currentUser} = useAuth();\r\n\r\n    //If a perosn is logged in then load all the component info\r\n    // Otherwise if there is no one logged in then go to login page\r\n    return (\r\n        <Route \r\n            {...rest}\r\n            render={props => {\r\n                return currentUser ? <Component {...props} /> : <Redirect to=\"/login\" />\r\n            }}\r\n        >\r\n\r\n        </Route>\r\n    );\r\n}","import React from \"react\"\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <h1>HomePage</h1>\r\n    );\r\n}","import React from \"react\";\r\n\r\nexport default function Meme({template, onCLick }) {\r\n    return (\r\n        <img \r\n            className=\"meme-img ml-2 mt-2\" \r\n            key={template.id} \r\n            src={template.url} \r\n            alt={template.name}\r\n            onClick={onCLick}\r\n        />\r\n    );\r\n}","import axios from \"axios\";\r\n\r\nexport default {\r\n    // Get all Memes\r\n    getMemes: function() {\r\n        return axios.get(\"/api/createdMeme\");\r\n    },\r\n    //get one meme\r\n    getMeme: function(id) {\r\n        return axios.get(\"/api/createdMeme/\" + id);\r\n    },\r\n    //delete meme\r\n    deleteMeme: function(id) {\r\n        return axios.delete(\"/api/createdMeme/\" + id);\r\n    },\r\n    //create a meme\r\n    createMeme: function(memeData) {\r\n        console.log(memeData)\r\n        return axios.post(\"/api/createdMeme\", memeData);\r\n    },\r\n    //post liked meme\r\n    likeMeme: function(memeData) {\r\n        return axios.post(\"/api/likedMeme\", memeData);\r\n    },\r\n    //unlike a meme\r\n    unlikeMeme: function(memeId) {\r\n        return axios.delete(\"/api/likedMeme/\" + memeId);\r\n    },\r\n};","import React, { useEffect, useState } from \"react\"\r\nimport {Container, Form, Button} from \"react-bootstrap\";\r\nimport \"../styles/CreateMemePage.css\";\r\nimport Meme from \"../components/Meme/\";\r\nimport {useAuth} from \"../contexts/AuthContext\";\r\nimport API from \"../utils/API\";\r\n\r\nconst objectToQueryParam = (obj) => {\r\n    const params = Object.entries(obj).map(([key, value]) => `${key}=${value}`)\r\n    return '?' + params.join(\"&\")\r\n}\r\n\r\nexport default function CreateMemePage() {\r\n\r\n    \r\n    const [templates, setTemplates] = useState([]); //tmeplates stores all the meme img's retrieved from API\r\n    const [template, setTemplate] = useState(null); //template stores which image the user chose to use\r\n    const [topText, setTopText] = useState('');\r\n    const [bottomText, setBottomText] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    \r\n\r\n    //to get the current user\r\n    const {currentUser} = useAuth();\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://api.imgflip.com/get_memes\")\r\n        .then(x => x.json().then(res => setTemplates(res.data.memes))\r\n        );\r\n    }, []);\r\n\r\n\r\n    async function handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(\"pressed\");\r\n\r\n        const params = {\r\n            template_id: template.id,\r\n            text0: topText,\r\n            text1: bottomText,\r\n            username: \"MemePost\",\r\n            password: \"memePost001\"\r\n\r\n        }\r\n\r\n        //will take all the parameters needed to make the meme and send it to their api\r\n        const response = await fetch(`https://api.imgflip.com/caption_image${objectToQueryParam(params)}`);\r\n\r\n\r\n        console.log(title);\r\n\r\n        //url of finished meme from API\r\n        const data = await response.json()\r\n        console.log(data.data.url);\r\n\r\n        //get the current user\r\n        const userEmail = {\r\n            user: currentUser.email\r\n        }\r\n        console.log(userEmail);\r\n\r\n        if(title && data && userEmail) {\r\n            let memes = {\r\n                title: title,\r\n                meme: data.data.url,\r\n                user: userEmail.user\r\n            }\r\n            console.log(memes);\r\n           API.createMeme(memes)\r\n            .then(() => console.log(\"meme made\"))\r\n            .catch((err) => console.log(err))\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Create a Meme</h1>\r\n            <Container fluid className=\"meme-display-container\">\r\n                {template && (\r\n                    <>\r\n                        <Meme template={template}/>\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Form.Group id=\"title\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control placeholder=\"Title of Meme\" onChange={e => setTitle(e.target.value)} value={title}/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"top-text\">\r\n                                <Form.Label>Top-Text</Form.Label>\r\n                                <Form.Control placeholder=\"top-text\" onChange={e => setTopText(e.target.value)} value={topText}/>\r\n                            </Form.Group>\r\n                            <Form.Group id=\"bottom-text\">\r\n                                <Form.Label>Bottom-Text</Form.Label>\r\n                                <Form.Control  placeholder=\"bottom-text\"  onChange={e => setBottomText(e.target.value)} value={bottomText}/>\r\n                            </Form.Group>\r\n                            <Button className=\"btn btn-primary\" type=\"submit\">Create Meme</Button>\r\n                        </Form>\r\n                  </>\r\n                )}\r\n                {!template && templates.map((template) => {\r\n                    return (\r\n                        <img             \r\n                            className=\"meme-img ml-2 mt-2\" \r\n                            key={template.id} \r\n                            src={template.url} \r\n                            alt={template.name}\r\n                            onClick={() => {\r\n                                setTemplate(template)\r\n                            }}\r\n                        />\r\n                    );\r\n                })}\r\n            </Container>\r\n        </div>\r\n    );\r\n}","import React from \"react\"\r\n\r\nexport default function LikedMemePage() {\r\n    return (\r\n        <h1>Your Liked Memes</h1>\r\n    );\r\n}","  \nimport React from \"react\";\nimport Navbar from './components/Navbar';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\nimport Signup from \"./pages/Signup\";\nimport Login from \"./pages/Login\";\nimport Profile from \"./pages/Profile\";\nimport ForgotPassword from \"./pages/ForgotPassword\";\nimport UpdateProfile from \"./pages/UpdateProfile\";\nimport { AuthProvider } from \"./contexts/AuthContext\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport HomePage from \"./pages/HomePage\";\nimport CreateMemePage from \"./pages/CreateMemePage\";\nimport LikedMemePage from \"./pages/LikedMemePage\";\n\nfunction App() {\n  return (\n      <div>\n        <Router>\n          <AuthProvider>\n          <Navbar />\n              <Switch>\n                <Route path=\"/signup\" component={Signup} />\n                <PrivateRoute exact path =\"/profile\" component={Profile} />\n                <Route path=\"/login\" component={Login} />\n                <Route path =\"/forgot-password\" component={ForgotPassword} />\n                <Route path=\"/update_profile\" component={UpdateProfile} />\n                <Route path =\"/homepage\" component={HomePage} />\n                <Route path =\"/create\" component={CreateMemePage} />\n                <Route path=\"/liked\" component={LikedMemePage} />\n              </Switch>\n          </AuthProvider>\n        </Router>\n      </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}